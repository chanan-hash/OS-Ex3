make debug
gcc -Wall -g -o hello hello.c
hello.c: In function ‘main’:
hello.c:12:9: warning: unused variable ‘i’ [-Wunused-variable]
   12 |     int i, length;
      |         ^
valgrind --leak-check=full --vgdb=yes --vgdb-error=0 ./hello
==3322== Memcheck, a memory error detector
==3322== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3322== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==3322== Command: ./hello
==3322== 
==3322== (action at startup) vgdb me ... 
==3322== 
==3322== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==3322==   /path/to/gdb ./hello
==3322== and then give GDB the following command
==3322==   target remote | /usr/lib/x86_64-linux-gnu/valgrind/../../bin/vgdb --pid=3322
==3322== --pid is optional if only one valgrind process is running
==3322== 
==3322== Conditional jump or move depends on uninitialised value(s)
==3322==    at 0x109234: main (hello.c:21)
==3322== 
==3322== (action on error) vgdb me ... 
==3322== Continuing ...
==3322== Use of uninitialised value of size 8
==3322==    at 0x483F094: strcpy (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==3322==    by 0x109248: main (hello.c:23)
==3322== 
==3322== (action on error) vgdb me ... 
==3322== Continuing ...
==3322== Conditional jump or move depends on uninitialised value(s)
==3322==    at 0x483F0D5: strcpy (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==3322==    by 0x109248: main (hello.c:23)
==3322== 
==3322== (action on error) vgdb me ... 
==3322== Continuing ...
==3322== Conditional jump or move depends on uninitialised value(s)
==3322==    at 0x483F0DA: strcpy (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==3322==    by 0x109248: main (hello.c:23)
==3322== 
==3322== (action on error) vgdb me ... 
==3322== Continuing ...
==3322== Conditional jump or move depends on uninitialised value(s)
==3322==    at 0x483F0DC: strcpy (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==3322==    by 0x109248: main (hello.c:23)
==3322== 
==3322== (action on error) vgdb me ... 
==3322== Continuing ...
==3322== Conditional jump or move depends on uninitialised value(s)
==3322==    at 0x483F0EB: strcpy (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==3322==    by 0x109248: main (hello.c:23)
==3322== 
==3322== (action on error) vgdb me ... 
==3322== Continuing ...
You enterd: ./hello
==3322== 
==3322== HEAP SUMMARY:
==3322==     in use at exit: 9 bytes in 1 blocks
==3322==   total heap usage: 2 allocs, 1 frees, 1,033 bytes allocated
==3322== 
==3322== 9 bytes in 1 blocks are definitely lost in loss record 1 of 1
==3322==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==3322==    by 0x10922A: main (hello.c:17)
==3322== 
==3322== LEAK SUMMARY:
==3322==    definitely lost: 9 bytes in 1 blocks
==3322==    indirectly lost: 0 bytes in 0 blocks
==3322==      possibly lost: 0 bytes in 0 blocks
==3322==    still reachable: 0 bytes in 0 blocks
==3322==         suppressed: 0 bytes in 0 blocks
==3322== 
==3322== Use --track-origins=yes to see where uninitialised values come from
==3322== For lists of detected and suppressed errors, rerun with: -s
==3322== ERROR SUMMARY: 7 errors from 7 contexts (suppressed: 0 from 0)